<!--  Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license.
        See LICENSE in the source repository root for complete license information. -->

@model Microsoft.Graph.Subscription

@{
    ViewBag.Title = "Subscription";
    bool isAuthenticated = User.Identity.IsAuthenticated;
}

<h2>Subscription</h2>
@if (Model != null)
{
    <p>The following subscription was successfully created.</p>
    <div>
        <table>
            <tr>
                <td>
                    @Html.LabelFor(m => m.Resource, htmlAttributes: new { @class = "control-label col-md-2" })
                </td>
                <td>
                    @Model.Resource
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(m => m.ChangeType, htmlAttributes: new { @class = "control-label col-md-2" })
                </td>
                <td>
                    @Model.ChangeType
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(m => m.ClientState, htmlAttributes: new { @class = "control-label col-md-2" })
                </td>
                <td>
                    @Model.ClientState
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(m => m.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                </td>
                <td>
                    @Model.Id
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(m => m.ExpirationDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                </td>
                <td>
                    @Model.ExpirationDateTime
                </td>
            </tr>
        </table>
    </div>
    <br />
    <div>
        @using (Html.BeginForm($"Delete{(isAuthenticated ? string.Empty : "AppOnly")}", "Subscription"))
        {
            @Html.Hidden("id", Model.Id)
            <button type="submit">Delete subscription</button>
        }
    </div>
    <div>
        @using (Html.BeginForm($"Renew{(isAuthenticated ? string.Empty : "AppOnly")}", "Subscription"))
        {
            @Html.Hidden("id", Model.Id)
            <button type="submit">Renew subscription</button>
        }
    </div>
    <br />
    <br />
    <div>
        <h4>Watch for notifications</h4>
        <p>Choose <b>Watch for notifications</b> and then generate events (eg send emails to the user, create teams messages...). The <b>Notifications</b> page will display metadata.</p>
        @using (Html.BeginForm($"LoadView{(isAuthenticated ? string.Empty : "AppOnly")}", "Notification"))
        {
            @Html.Hidden("id", Model.Id)
            <button type="submit">Watch for notifications</button>
        }
    </div>
}
<br />
<div hidden=@((ViewBag.Message == null) ? true : false)><b>@ViewBag.Message</b></div>
